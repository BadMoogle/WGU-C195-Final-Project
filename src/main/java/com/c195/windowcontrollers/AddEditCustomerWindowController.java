/**
 * Sample Skeleton for 'AddEditCustomerWindow.fxml' Controller Class
 */

package com.c195.windowcontrollers;

import java.net.URL;
import java.sql.Date;
import java.util.ResourceBundle;

import com.c195.App;
import com.c195.datamodels.*;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

/**
 * Class controller for the Add/Edit customer window
 */
public class AddEditCustomerWindowController {

    public static Customer customer;
    public static ObservableList<Division> divisionObservableList;

    @FXML // ResourceBundle that was given to the FXMLLoader
    private ResourceBundle resources;

    @FXML // URL location of the FXML file that was given to the FXMLLoader
    private URL location;

    @FXML // fx:id="comboBoxCountry"
    private ComboBox<Country> comboBoxCountry; // Value injected by FXMLLoader

    @FXML // fx:id="buttonCancel"
    private Button buttonCancel; // Value injected by FXMLLoader

    @FXML // fx:id="buttonSave"
    private Button buttonSave; // Value injected by FXMLLoader

    @FXML // fx:id="comboBoxDivision"
    private ComboBox<Division> comboBoxDivision; // Value injected by FXMLLoader

    @FXML // fx:id="textBoxId"
    private TextField textBoxId; // Value injected by FXMLLoader

    @FXML // fx:id="textBoxAddress"
    private TextField textBoxAddress; // Value injected by FXMLLoader

    @FXML // fx:id="textBoxName"
    private TextField textBoxName; // Value injected by FXMLLoader

    @FXML // fx:id="textBoxPhoneNumber"
    private TextField textBoxPhoneNumber; // Value injected by FXMLLoader

    @FXML // fx:id="textBoxPostalCode"
    private TextField textBoxPostalCode; // Value injected by FXMLLoader

    /**
     * Event handler for when the cancel button is clicked
     *
     * @param event Ignored
     */
    @FXML
    void onButtonCancelClicked(ActionEvent event) {
        Stage currentStage = (Stage) buttonCancel.getScene().getWindow();
        customer = null;
        currentStage.close();
    }

    /**
     * Event handler for the save button
     *
     * @param event ignored
     */
    @FXML
    void onButtonSaveClicked(ActionEvent event) {
        if (textBoxName.getText() == "" || textBoxAddress.getText() == "" || textBoxPostalCode.getText() == ""
                || textBoxPhoneNumber.getText() == ""
                || comboBoxDivision.getSelectionModel().getSelectedItem() == null) {
            Alert alert = new Alert(Alert.AlertType.ERROR, resources.getString("fillOutAllFields"));
            alert.showAndWait();
            return;
        }
        if (customer == null) {
            DatabaseController.addCustomer(new Customer(-1, textBoxName.getText(), textBoxAddress.getText(),
                    textBoxPostalCode.getText(), textBoxPhoneNumber.getText(), new Date(System.currentTimeMillis()),
                    App.getCurrentUserName(), new Date(System.currentTimeMillis()), App.getCurrentUserName(),
                    comboBoxDivision.getSelectionModel().getSelectedItem().getDivisionId()));
        }
        else {
            customer.setName(textBoxName.getText());
            customer.setAddress(textBoxAddress.getText());
            customer.setPostalCode(textBoxPostalCode.getText());
            customer.setPhoneNumber(textBoxPhoneNumber.getText());
            customer.setDivisionId(comboBoxDivision.getSelectionModel().getSelectedItem().getDivisionId());
            DatabaseController.updateCustomer(customer);
        }
        Stage currentStage = (Stage) buttonSave.getScene().getWindow();
        customer = null;
        currentStage.close();
    }

    /**
     * Event handler for when the combobox Country is changed.
     *
     * @param event Ignored
     */
    @FXML
    void onComboBoxCountryAction(ActionEvent event) {
        Country country = comboBoxCountry.getSelectionModel().getSelectedItem();
        if (country != null){
            divisionObservableList = DatabaseController.getDivisionsByCountryId(country.getCountryId());
            comboBoxDivision.setItems(divisionObservableList);
        }
    }

    /**
     * Sets the data in the controls after the form is initialized
     */
    @FXML // This method is called by the FXMLLoader when initialization is complete
    void initialize() {
        comboBoxCountry.setItems(DatabaseController.getAllCountries());
        divisionObservableList = null;
        textBoxId.setText("Autogenerated");

        if (customer != null) {
            textBoxId.setText(Integer.toString(customer.getCustomerId()));
            textBoxName.setText(customer.getName());
            textBoxAddress.setText(customer.getAddress());
            textBoxPhoneNumber.setText(customer.getPhoneNumber());
            textBoxPostalCode.setText(customer.getPostalCode());
            comboBoxCountry.getSelectionModel().select(customer.getDivision().getCountry());
            divisionObservableList = DatabaseController.getDivisionsByCountryId(customer.getDivision().getCountry().getCountryId());
            comboBoxDivision.setItems(divisionObservableList);
            comboBoxDivision.getSelectionModel().select(customer.getDivision());
        }

    }

}
